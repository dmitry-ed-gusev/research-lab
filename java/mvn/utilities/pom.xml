<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>dgusev</groupId>
        <artifactId>research</artifactId>
        <version>${revision}</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>utilities</artifactId>
    <packaging>jar</packaging>
    <version>3.0</version>
    <name>Utilities :: java useful utilities.</name>

    <properties>
        <assemblyDirectory>dgutils</assemblyDirectory>
        <mainClass>gusev.dmitry.jtils.Main</mainClass>
        <jar.name>${project.artifactId}-${env}</jar.name>
    </properties>

    <build>

        <finalName>${jar.name}</finalName>

        <plugins>

            <!--
             jar/archiver maven plugin settings: 1. put main class name in manifest,
              2. add classpath to manifest (for all dependencies), 3. add prefix for classpath
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                            <classpathPrefix>${common.libraries.prefix}/</classpathPrefix>
                        </manifest>
                    </archive>
                    <!-- put jar file into another directory -->
                    <outputDirectory>${project.build.directory}/${assemblyDirectory}</outputDirectory>
                    <!-- todo: excluded log4j config from including in final JAR file -->
                    <excludes>
                        <exclude>log4j.properties</exclude>
                    </excludes>
                </configuration>
                <version>${maven.plugin.jar}</version>
            </plugin>

            <!-- Dependency plugin - copy dependencies to folder lib/ in output dir during package phase. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <outputDirectory>${project.build.directory}/${assemblyDirectory}/${common.libraries.prefix}
                    </outputDirectory>
                    <artifactItems/>
                </configuration>
                <executions>
                    <execution>
                        <id>dep-copy</id>
                        <phase>${prod.build.phase}</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- ANT tasks for copying project to remote folder - to virtual machine, where this task will work. -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-files</id>
                        <phase>${prod.build.phase}</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <tasks>
                        <!-- copy and filter batch files  -->
                        <copy todir="${project.build.directory}/${assemblyDirectory}" flatten="false" overwrite="true"
                              verbose="true" failonerror="true">
                            <fileset dir="${basedir}" includes="*.bat"/>
                            <filterset>
                                <filter token="JAR_NAME" value="${jar.name}"/>
                            </filterset>
                        </copy>
                    </tasks>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <!-- Apache Commons libraries dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons.cli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${apache.commons.csv.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>

        <!-- Logging libraries -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <!-- Java mail dependency -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${java.mail.version}</version>
        </dependency>

        <!-- Spring framework dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.context.version}</version>
        </dependency>

        <!-- JSON libraries -->
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>${google.json-simple.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${org.jsoup.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${javax.ws.rs.version}</version>
        </dependency>

        <!-- Sun Jersey Client v.1.x -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <!--<version>${version.jersey.client}</version>-->
            <version>1.19.4</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>${version.jersey.common}</version>
        </dependency>

        <!-- simple cmd line options utility -->
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>${jopt.simple.version}</version>
        </dependency>

    </dependencies>

</project>
<!-- ANT build script -->
<project name="Persistence_HelloWorld" default="compile" basedir=".">
 <!-- Name of project and version -->
 <property name="proj.name" value="HelloWorld"/>
 <property name="proj.version" value="1.0"/>
 <!-- Global properties for this build -->
 <property name="src.java.dir" value="src"/>
 <property name="lib.dir" value="lib"/>
 <property name="build.dir" value="out"/>
 <!-- Catalog with metadata -->
 <property name="src.meta-inf.dir" value="META-INF"/>

 <!-- Classpath declaration -->
 <path id="project.classpath">
  <fileset dir="${lib.dir}">
   <include name="**/*.jar"/>
   <include name="**/*.zip"/>
  </fileset>
 </path>

 <!-- Useful shortcuts -->
 <patternset id="meta.files">
  <include name="**/*.xml"/>
  <include name="**/*.properties"/>
 </patternset>

 <!-- Clean up -->
 <target name="clean">
  <delete dir="${build.dir}"/>
  <mkdir dir="${build.dir}"/>
 </target>

 <!-- Compile Java source -->
 <target name="compile" depends="clean">
  <mkdir dir="${build.dir}"/>
  <javac srcdir="${src.java.dir}" destdir="${build.dir}" nowarn="on">
   <classpath refid="project.classpath"/>
  </javac>
 </target>

 <!-- Copy metadata to build classpath -->
 <target name="copymetafiles">
  <!-- copy metadata -->
  <copy todir="${build.dir}">
   <fileset dir="${src.java.dir}">
    <patternset refid="meta.files"/>
   </fileset>
  </copy>

  <!-- Copy configuration files from META-INF/ -->
  <copy todir="${build.dir}/${src.meta-inf.dir}">
   <fileset dir="${src.meta-inf.dir}"/>
  </copy>
 </target>

 <!-- Run HiberHelloWorld -->
 <target name="runHiberHelloWorld" depends="compile, copymetafiles" description="Build and run HiberHelloWorld">
  <java fork="true" classname="helloWorld.hibernate.HiberHelloWorld" classpathref="project.classpath">
   <classpath path="${build.dir}"/>
  </java>
 </target>

 <!-- Run AnnotatedHelloWorld -->
 <target name="runAnnotatedHelloWorld" depends="compile, copymetafiles" description="Build and run AnnotatedHelloWorld">
  <java fork="true" classname="helloWorld.annotated.AnnotatedHelloWorld" classpathref="project.classpath">
   <classpath path="${build.dir}"/>
  </java>
 </target>

 <!-- Run JpaHelloWorld -->
 <target name="runJpaHelloWorld" depends="compile, copymetafiles" description="Build and run JpaHelloWorld">
  <java fork="true" classname="helloWorld.jpa.JpaHelloWorld" classpathref="project.classpath">
   <classpath path="${build.dir}"/>
  </java>
 </target>

 <!-- HSQL DB Manager (visual) -->
 <!--
 <target name="dbmanager" description="Start HSQLDB manager">
  <java classname="org.hsqldb.util.DatabaseManagerSwing" fork="yes" classpathref="project.classpath" failonerror="true">
   <arg value="-url"/>
   <arg value="jdbc:hsqldb:hsql://localhost/"/>
   <arg value="-driver"/>
   <arg value="org.hsqldb.jdbcDriver"/>
  </java>
 </target>
 -->

 <!--
 <taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="project.classpath"/>
 <target name="schemaexport" depends="compile, copymetafiles" description="Exports a generated schema to DB and file">
  <hibernatetool destdir="${basedir}">
   <classpath path="${build.dir}"/>
   <configuration configurationfile="${build.dir}/hibernate.cfg.xml"/>
   <hbm2ddl
    drop="true"
    create="true"
    export="true"
    outputfilename="helloworld-ddl.sql"
    delimiter=";"
    format="true"/>
  </hibernatetool>
 </target>
 -->

</project>
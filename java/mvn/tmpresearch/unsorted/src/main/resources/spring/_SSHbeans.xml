<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--
    &lt;!&ndash; Active Directory config bean &ndash;&gt;
    <bean id="adConfig" class="ru.kzgroup.domain.dao.personnel.ActiveDirectoryConfig">
        <constructor-arg name="address" value="${ad.host}"/>
        <constructor-arg name="username" value="${ad.user}"/>
        <constructor-arg name="password" value="${ad.pass}"/>
    </bean>
    &lt;!&ndash; Active Directory DAO module &ndash;&gt;
    <bean id="adDao" class="ru.kzgroup.domain.dao.personnel.ActiveDirectoryDao">
        <constructor-arg name="adConfig" ref="adConfig"/>
    </bean>

    &lt;!&ndash; directories processor bean - copy directories PDX->ORA &ndash;&gt;
    <bean id="directoriesProcessor" class="ru.kzgroup.dataMiner.processors.directories.DirectoriesProcessor">
        <property name="pdxDBCopier" ref="pdxDBCopier"/>
        <property name="classes" ref="directoriesClasses"/>
        <property name="oraSessionFactory" ref="oraSpringSessionFactory_COMMON"/>
        <property name="pdxSessionFactory" ref="pdxSpringSessionFactory_COMMON"/>
    </bean>
    &lt;!&ndash; orders processor bean - copy orders PDX->ORA &ndash;&gt;
    <bean id="ordersProcessor" class="ru.kzgroup.dataMiner.processors.directories.DirectoriesProcessor">
        <property name="pdxDBCopier" ref="pdxDBCopier"/>
        <property name="classes" ref="ordersClasses"/>
        <property name="oraSessionFactory" ref="oraSpringSessionFactory_COMMON"/>
        <property name="pdxSessionFactory" ref="pdxSpringSessionFactory_COMMON"/>
    </bean>
    &lt;!&ndash; audit processor bean - copy data from PDX to ORA with audit: PDX->AUDIT->ORA &ndash;&gt;
    <bean id="auditProcessor" class="ru.kzgroup.dataMiner.processors.directories.DirectoriesProcessor">
        <property name="pdxDBCopier" ref="pdxDBCopier"/>
        <property name="classes" ref="auditClasses"/>
        <property name="oraSessionFactory" ref="oraSpringSessionFactory_COMMON"/>
        <property name="pdxSessionFactory" ref="pdxSpringSessionFactory_COMMON"/>
    </bean>
    &lt;!&ndash; directories processor bean - copy directories PDX->ORA &ndash;&gt;
    <bean id="testProcessor" class="ru.kzgroup.dataMiner.processors.directories.DirectoriesProcessor">
        <property name="pdxDBCopier"       ref="pdxDBCopier"/>
        <property name="classes"           ref="testClasses"/>
        <property name="oraSessionFactory" ref="oraSpringSessionFactory_COMMON"/>
        <property name="pdxSessionFactory" ref="pdxSpringSessionFactory_COMMON"/>
    </bean>

    &lt;!&ndash; aspect for any bean based on class DirectoriesProcessor - all methods should be transactional &ndash;&gt;
    <aop:config>
        <aop:pointcut id="directoriesProcessorAOP"
                      expression="execution(* ru.kzgroup.dataMiner.processors.directories.DirectoriesProcessor.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="directoriesProcessorAOP"/>
    </aop:config>

    &lt;!&ndash; Mailer - send emails with services log-files &ndash;&gt;
    <bean id="logDataMiner" class="java.io.File">
        <constructor-arg index="0" value="${log.file.DataMiner}" type="java.lang.String"/>
    </bean>
    <bean id="logTechnologyDataMiner" class="java.io.File">
        <constructor-arg index="0" value="${log.file.TechnologyDataMiner}" type="java.lang.String"/>
    </bean>
    <bean id="logTelegramService" class="java.io.File">
        <constructor-arg index="0" value="${log.file.TelegramService}" type="java.lang.String"/>
    </bean>
    <bean id="logSocketServiceIO1" class="java.io.File">
        <constructor-arg index="0" value="${log.file.SocketService01}" type="java.lang.String"/>
    </bean>
    <bean id="logSocketServiceIO2" class="java.io.File">
        <constructor-arg index="0" value="${log.file.SocketService02}" type="java.lang.String"/>
    </bean>
    <bean id="logSocketServiceIO3" class="java.io.File">
        <constructor-arg index="0" value="${log.file.SocketService03}" type="java.lang.String"/>
    </bean>
    &lt;!&ndash; email message object &ndash;&gt;
    <bean id="mailMessage" class="ru.kzgroup.mail.EmailMessage">
        <property name="subject" value="${mailer.subject}"/>
        <property name="text" value="${mailer.text}"/>
        <property name="files">
            <map>
                <entry key="file1" value-ref="logDataMiner"/>
                <entry key="file2" value-ref="logTechnologyDataMiner"/>
                <entry key="file3" value-ref="logTelegramService"/>
                <entry key="file4" value-ref="logSocketServiceIO1"/>
                <entry key="file5" value-ref="logSocketServiceIO2"/>
                <entry key="file6" value-ref="logSocketServiceIO3"/>
            </map>
        </property>
    </bean>
    &lt;!&ndash; send mail object &ndash;&gt;
    <bean id="sendMail" class="ru.kzgroup.mail.SendMail">
        <constructor-arg name="host" value="${mailer.smtp.host}"/>
        <constructor-arg name="port" value="${mailer.smtp.port}"/>
        <constructor-arg name="user" value="${mailer.smtp.user}"/>
        <constructor-arg name="pass" value="${mailer.smtp.pass}"/>
        <constructor-arg name="email" value="${mailer.back.address}"/>
        <property name="message" ref="mailMessage"/>
        <property name="recipients" value="${mailer.recipients}"/>
    </bean>
-->

</beans>
Payments analyzer application, ver. 1.0.0, 2017 (C)
============================================================================
Created: Gusev Dmitrii, 22.11.2017
Modified: -

Данное приложение предназначено для развертывания RESTful веб-сервиса по проверке
текстовых фраз на наличие т.н. "стоп-слов" в режиме реального времени.

============================================================================

1. Зависимости
Для работы сервиса необходим пакет JDK (не JRE!) версии 8, обновление не ниже 131.
Другие зависимости не нужны.

============================================================================

2. Развертывание, запуск и останов сервиса
Развертывание сервиса - распаковка/перенос каталога с сервисом в любое место файловой системы.
Запуск сервиса прост - необходимо запустить скрипт panalyzer.bat Сервис развернется (стартует) автоматически, в консоли
можно будет увидеть лог развертывания сервиса и диагностические сообщения его работы (дублируются в лог файле).
По умолчанию сервис развертывается на текущем хосте (localhost/127.0.0.1) на порту 8080.
Перейдя по URL http://localhost:8080/panalyzer/index.html - можно увидеть инфо-страничку сервиса (данный URL
следует открывать через веб браузер)
Для останова сервиса в консоли запущенного сервиса необходимо использовать комбинацию клавиш Ctrl-C (прерывание).

============================================================================

3. Использование
Для использования сервиса необходимо отправить POST HTTP запрос, содержащий в теле строку для проверки.
Кодировка строки должна быть UTF-8.

Адрес для отправки POST запроса: http://localhost:8080/panalyzer/rest/check

В ответ сервис возвращает JSON в формате:
{"code": <числовой код>, "message": <сопроводительное сообщение>}
Коды, возвращаемые сервисом:
0 - все ок
1 - во фразе есть "стоп" слова
-1 - пустая фраза для проверки

Примеры запросов к сервису, с использованием утилиты curl:

curl -X POST -H "Content-Type: text/plain; charset=UTF-8" --data-ascii "платеж пиzда для нужд"
http://127.0.0.1:8080/panalyzer/rest/check
ответ: {"code":1,"message":"Contains stop words!"}

curl -X POST -H "Content-Type: text/plain; charset=UTF-8" --data-ascii "платеж"
http://127.0.0.1:8080/panalyzer/rest/check
ответ: {"code":0,"message":"OK"}

curl -X POST -H "Content-Type: text/plain; charset=UTF-8" --data-ascii ""
http://127.0.0.1:8080/panalyzer/rest/check
ответ: {"code":-1,"message":"Empty check phrase!"}

============================================================================

4. Конфигурирование
Для конфигурирования системы использеутся файл panalyzer.properties.
Параметры:
    pan.service.port - порт, на котором развертывается веб-сервис не текущем хосте. Целое положительное число.
    pan.service.context.path - контекст (корневой путь) развертывания веб-сервиса. Должен быть не пуст.
    pan.war.file - WAR архив для развертывания сервиса. Находится в том же каталоге, что и утилита.
Остальные параметры в данном файле добавлены для дальнейшего расширения сервиса.
В версии 1.0.0 не рекомендуется изменять параметры в файле вручную, они необходимы для дальнейшего расширения сервиса.

============================================================================

5. Техническая информация
    1) сервис использует веб-контейнер glassfish в embedded режиме.
    2) сервис является кросс-платформенным (написан на чистой Java 8).
    3) все зависимости упакованы внутри приложения.
    4) при работе сервис "очищает" переданную фразу, разбивает ее на слова и проверяет каждое слово отдельно,
       при проверке слова английские буквы заменяются на русские для проверки, но только если в слове есть русские буквы.
       Т.е. если слово содержит только английские буквы, замена НЕ производится.
    5) работа сервиса протоколируется в консоли и дублируется в лог файле panalyzer.log. В случае проблем с сервисом,
       данный лог файл поможет разобраться в проблеме сервиса. Лог файл ротируется ежесуточно, что позволяет его
       архивировать и перемещать по необходимости.

============================================================================